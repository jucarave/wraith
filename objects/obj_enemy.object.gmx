<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
dir = 0;
bright = false;

hp = 1;
mHp = 1;
active = true;
spd = 0;

path = -1;
path_ind = 0;

walkInd = 0;
walkSpd = 1 / 3;
walkMInd = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_round_over)) exit;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!active) exit;

if (hp &lt;= 0){
    active = false;
    x = 0;
    y = 0;
    
    obj_system.ENEMIES_SCORE += 1;
    obj_system.MONEY += money;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!active) exit;

walkInd += walkSpd;
if (walkInd &gt;= walkMInd){ walkInd = 0; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_round_over)) exit;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!active) exit;
var ang = direction;

if (ang &lt; 25 || ang &gt;= 340){
    dir = 0;
}else if (ang &gt;= 25 &amp;&amp; ang &lt; 70){
    dir = 1;
}else if (ang &gt;= 70 &amp;&amp; ang &lt; 115){
    dir = 2;
}else if (ang &gt;= 115 &amp;&amp; ang &lt; 160){
    dir = 3;
}else if (ang &gt;= 160 &amp;&amp; ang &lt; 205){
    dir = 4;
}else if (ang &gt;= 205 &amp;&amp; ang &lt; 250){
    dir = 5;
}else if (ang &gt;= 250 &amp;&amp; ang &lt; 295){
    dir = 6;
}else if (ang &gt;= 295 &amp;&amp; ang &lt; 340){
    dir = 7;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!active) exit;
var ang = point_direction(x, y, obj_player.x, obj_player.y);

var img = 0;
if (ang &lt; 25 || ang &gt;= 340){
    img = dir - 0;
}else if (ang &gt;= 25 &amp;&amp; ang &lt; 70){
    img = dir - 1;
}else if (ang &gt;= 70 &amp;&amp; ang &lt; 115){
    img = dir - 2;
}else if (ang &gt;= 115 &amp;&amp; ang &lt; 160){
    img = dir - 3;
}else if (ang &gt;= 160 &amp;&amp; ang &lt; 205){
    img = dir - 4;
}else if (ang &gt;= 205 &amp;&amp; ang &lt; 250){
    img = dir - 5;
}else if (ang &gt;= 250 &amp;&amp; ang &lt; 295){
    img = dir - 6;
}else if (ang &gt;= 295 &amp;&amp; ang &lt; 340){
    img = dir - 7;
}


image_index = ((img + 8) mod 8) + (floor(walkInd) * 8);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!active) exit;

if (path_ind &gt; path_get_length(path)){ 
    active = false;
    x = 0;
    y = 0;
    
    with (obj_system){
        ENEMIES_FAILED += 1;
        sys_check_defeat();
    }
}

var px = path_get_point_x(path, path_ind) + 0.5;
var py = path_get_point_y(path, path_ind) + 0.5;

if (x == px &amp;&amp; y == py){
    path_ind += 1;
    px = path_get_point_x(path, path_ind) + 0.5;
    py = path_get_point_y(path, path_ind) + 0.5;
    
    direction = point_direction(x, y, px, py);
}else{
    var s = spd;
    var slow = instance_nearest(x, y, obj_tower);
    if (slow &amp;&amp; slow.tower_ind == 1){
        if (point_distance(x, y, slow.x, slow.y) &lt; slow.max_distance){
            s *= 0.5; 
        }
    }
    
    if (x &gt; px){
        x -= s;
        if (x &lt;= px){ x = px; }
    }else if (x &lt; px){
        x += s;
        if (x &gt;= px){ x = px; }
    }
    
    if (y &gt; py){
        y -= s;
        if (y &lt;= py){ y = py; }
    }else if (y &lt; py){
        y += s;
        if (y &gt;= py){ y = py; }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
